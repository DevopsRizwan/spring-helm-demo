# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '70e5f60c-779c-48a9-b8d2-aed54fea61d3'
  imageRepository: 'devopsrizwanspringhelmdemo'
  containerRegistry: 'containerregistrydelphi.azurecr.io'
  dockerfilePath: '**/spring-app/Dockerfile'
  buildfilePath: 'spring-app/build.sh'
  helmchartFile: 'helm-charts/'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'containerregistrydelphi1980-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:

  
- stage: Deploy
  displayName: Deploy stage
 # dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'DevopsRizwanspringhelmdemo.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: HelmDeploy@0
            displayName: Helm List 
            inputs:
              command: ls
              arguments: --all
          - task: HelmDeploy@0
            displayName: Helm Install 
            inputs:
              command: install
              chartType: FilePath
              chartPath: '**/spring-app/'
              releaseName: delphi-release
