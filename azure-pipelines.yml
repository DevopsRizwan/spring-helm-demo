# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '70e5f60c-779c-48a9-b8d2-aed54fea61d3'
  imageRepository: 'devopsrizwanspringhelmdemo'
  containerRegistry: 'containerregistrydelphi.azurecr.io'
  dockerfilePath: '**/spring-app/Dockerfile'
  buildfilePath: 'spring-app/build.sh'
  helmchartFile: 'helm-charts/equitativa'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'containerregistrydelphi1980-auth'
  user: 'bf771a9c-5165-4ea7-b296-17114d14742a'
  password: 'ca4b7123-6304-4ed2-aa91-3d4c3e67ecbd'
  tenant: '9123e8ef-4aad-4746-989f-2296ab92e67b'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:

- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: ShellScript@2
      inputs:
        scriptPath: '$(buildfilePath)'
         
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          demo
    - task: HelmInstaller@1
      displayName: 'install helm'
      inputs:
        helmVersionToInstall: 3.0.0

    - task: HelmDeploy@0
      displayName: Helm init
      inputs:
        command: init
        upgradetiller: true
        waitForExecution: true
        arguments: --client-only

    

 #   - bash: |
 #        az login \
 ##       -- service-principal \
 #       -u $(user) \
 #       -p '$(password)' \
 #       --tenant $(tenant)

        
 #       helm list
 #       helm install myapp $(helmchartFile)